name: Book Api Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
  

jobs:
  build_test:
    runs-on: ubuntu-latest
    env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}
    strategy:
      matrix:
        node-version: [14.x]
        
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci 
      # build and test the apps     
      - name: build
        run: |
          npm run build
         # npm run test
  push_to_Docker_Hub:
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build_test]

      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/book-api:latest
            build-args: |
               "DB_HOST=${{ secrets.DB_HOST }}"
               "DB_NAME=${{ secrets.DB_NAME }}"
               "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
               "DB_USER=${{ secrets.DB_USER }}"

                       
        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/book-api:latest
            run: |
              echo "runing the docker image"
              echo "Testing the book-api app endpoints"
              echo ${{ steps.docker_build.outputs.digest }}


  deploy_to_elastic_beanstalk:
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [push_to_Docker_Hub]

      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Generate deployment package
          run: |
            cd deployment && zip -r ../deployment.zip .

        - name: Get Timestamp
          uses: gerred/actions/current-time@master
          id: current-time

        - name: Run String Replace
          uses: frabert/replace-string-action@master
          id: format-time
          with:
            pattern: '[:\.]+'
            string: "${{ steps.current-time.outputs.time }}"
            replace-with: "-"
            flags: "g"

        - name: Deploy to Elastic Beanstalk
          uses: einaregilsson/beanstalk-deploy@v14
          with:
            aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
            aws_secret_key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
            application_name: book-api
            environment_name: Bookapi-env-3
            version_label: "book-api-${{ steps.format-time.outputs.replaced }}"
            region: eu-west-1
            deployment_package: deployment.zip
            wait_for_deployment: false
            wait_for_environment_recovery: 10

